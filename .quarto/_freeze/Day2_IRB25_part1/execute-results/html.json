{
  "hash": "08f399fc172de96b786aecdb93f11374",
  "result": {
    "markdown": "---\ntitle: \"Table manipulation\"\nauthor: \n  - name: \"dr.sc. Paula Å tancl\"\n    affiliation: \"Kuzman Consulting d.o.o\"\n  - name: \"dr.sc. Andrea GelemanoviÄ‡\"\n    affiliation: \"MedILS, UNIST\"\nformat:\n  html:\n    self-contained: true\n    toc: true\n    toc-depth: 5\n    code-fold: false\n    fig-align: center\n    df-print: paged\n    code-summary: \"Show code\"\n    code-line-numbers: false\n    code-tools: true\nexecute:\n  echo: true\n  warning: false\n  message: false\n---\n\n\n# Tables (`data.frame` vs `data.table`)\n\nA **`data.frame`** is a 2D table-like structure where columns can hold different data types. **`data.table`** is an enhanced version of **`data.frame`** that provides faster and more memory-efficient operations.\n\n::: callout-important\n## Built-in datasets\n\n-   R comes with several **built-in datasets** that are useful for learning, testing, and demonstrating functions without needing to load external data.\n\n-   These datasets are included in base R and standard packages like `datasets`, and can be accessed directly by name (e.g., **`CO2`**, **`iris`**, **`mtcars`**, etc.).\n:::\n\nWe will be working with build-in dataset **iris** introduced by Ronald Fisher in his 1936 paper *The use of multiple measurements in taxonomic problems*, contains three plant species (setosa, virginica, versicolor) and four features measured for each sample.\n\nLet's examine the first six rows of the table!\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Call the table\nhead(iris)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"\"],\"name\":[\"_rn_\"],\"type\":[\"\"],\"align\":[\"left\"]},{\"label\":[\"Sepal.Length\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Sepal.Width\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Petal.Length\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Petal.Width\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Species\"],\"name\":[5],\"type\":[\"fct\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"5.1\",\"2\":\"3.5\",\"3\":\"1.4\",\"4\":\"0.2\",\"5\":\"setosa\",\"_rn_\":\"1\"},{\"1\":\"4.9\",\"2\":\"3.0\",\"3\":\"1.4\",\"4\":\"0.2\",\"5\":\"setosa\",\"_rn_\":\"2\"},{\"1\":\"4.7\",\"2\":\"3.2\",\"3\":\"1.3\",\"4\":\"0.2\",\"5\":\"setosa\",\"_rn_\":\"3\"},{\"1\":\"4.6\",\"2\":\"3.1\",\"3\":\"1.5\",\"4\":\"0.2\",\"5\":\"setosa\",\"_rn_\":\"4\"},{\"1\":\"5.0\",\"2\":\"3.6\",\"3\":\"1.4\",\"4\":\"0.2\",\"5\":\"setosa\",\"_rn_\":\"5\"},{\"1\":\"5.4\",\"2\":\"3.9\",\"3\":\"1.7\",\"4\":\"0.4\",\"5\":\"setosa\",\"_rn_\":\"6\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n+----------------+--------------------------------+-------------------------------------+\n| Feature        | `data.frame`                   | `data.table`                        |\n+================+================================+=====================================+\n| Base structure | Base R object                  | Extension of `data.frame`           |\n+----------------+--------------------------------+-------------------------------------+\n| Speed          | Moderate                       | Very fast, optimized for large data |\n+----------------+--------------------------------+-------------------------------------+\n| Syntax         | Verbose                        | Concise and powerful                |\n+----------------+--------------------------------+-------------------------------------+\n| Rownames       | Supported                      | Discouraged / ignored               |\n+----------------+--------------------------------+-------------------------------------+\n| Memory usage   | Standard                       | More memory-efficient               |\n+----------------+--------------------------------+-------------------------------------+\n| Grouping       | Uses `aggregate()` or `dplyr`  | Built-in with `by=`                 |\n+----------------+--------------------------------+-------------------------------------+\n| Joining        | Uses `merge()`                 | Fast joins with keys (`setkey()`)   |\n+----------------+--------------------------------+-------------------------------------+\n| Learning curve | Low (familiar to most R users) | Medium (different syntax)           |\n+----------------+--------------------------------+-------------------------------------+\n\n### Import different type of data\n\n::: callout-important\n## Functions to import the data\n\n-   basic R import function:\n\n    `df <- read.csv()`\n\n    `df <- read.tsv()`\n\n    `df <- read.table()`\n\n-   data.table import function:\n\n    `dt <- fread()`\n\n-   using specialized funcions from R packages to import files such as Excel, SPSS\n\n    `df <- read_excel()`\n\n    `df <- read.spss()`\n\n    `...`\n:::\n\n# Data.table\n\nTo use `data.table`, load the package:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(data.table)\n```\n:::\n\n\n![](http://ryo-n7.github.io/assets/2019-07-21-user2019-reflections_files/datatableFORM.PNG){fig-align=\"center\"}\n\n## How to obtain data.table?\n\n::: callout-important\n# Import as data.table or convert existing formats to data.table\n\n1.  Import data using function **fread()**.\n\n**`dt_import <- fread(\"PATH/TO/FILE\")`**\n\n2.  Convert data.frame (even other objects such as matrices, GRanges object...) using **as.data.table()**.\n\n**`dt_import <- as.data.table(df)`**\n\n3.  Another approach of converting object to data.table using **setDT()** but without defining the new variable.\n\n**`setDT(df)`**\n:::\n\n::: callout-tip\nA **file path** tells R where to find or save a file.\n\n-   **Absolute path**: The full location starting from the root of your computer.\n    -   Example: `\"C:/Users/Paula/Documents/data.csv\"`\n-   **Relative path**: A shortcut from the current working directory.\n    -   Example: `\"data/data.csv\"`\n\nUse `getwd()` to check your current working directory.\n\nðŸ’¡ **Tip**: In RStudio Projects, use **relative paths** so your code works on any computer.\n:::\n\n## From *data.frame* to *data.table*\n\nRun the code chunk below. If you want, check it out using **rownames()**.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n( df_letters <- data.frame( one=1:6, two=2:7, row.names=letters[1:6]) )\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"\"],\"name\":[\"_rn_\"],\"type\":[\"\"],\"align\":[\"left\"]},{\"label\":[\"one\"],\"name\":[1],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"two\"],\"name\":[2],\"type\":[\"int\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"1\",\"2\":\"2\",\"_rn_\":\"a\"},{\"1\":\"2\",\"2\":\"3\",\"_rn_\":\"b\"},{\"1\":\"3\",\"2\":\"4\",\"_rn_\":\"c\"},{\"1\":\"4\",\"2\":\"5\",\"_rn_\":\"d\"},{\"1\":\"5\",\"2\":\"6\",\"_rn_\":\"e\"},{\"1\":\"6\",\"2\":\"7\",\"_rn_\":\"f\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n```{.r .cell-code}\n( dt_letters <- as.data.table(df_letters) )\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"one\"],\"name\":[1],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"two\"],\"name\":[2],\"type\":[\"int\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"1\",\"2\":\"2\"},{\"1\":\"2\",\"2\":\"3\"},{\"1\":\"3\",\"2\":\"4\"},{\"1\":\"4\",\"2\":\"5\"},{\"1\":\"5\",\"2\":\"6\"},{\"1\":\"6\",\"2\":\"7\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n### How to keep the rownames?\n\nSet argument ***keep.rownames*** to TRUE if you want to keep the rownames as a separate column in data.table.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n( dt_letters <- as.data.table(df_letters, keep.rownames=TRUE) )\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"rn\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"one\"],\"name\":[2],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"two\"],\"name\":[3],\"type\":[\"int\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"a\",\"2\":\"1\",\"3\":\"2\"},{\"1\":\"b\",\"2\":\"2\",\"3\":\"3\"},{\"1\":\"c\",\"2\":\"3\",\"3\":\"4\"},{\"1\":\"d\",\"2\":\"4\",\"3\":\"5\"},{\"1\":\"e\",\"2\":\"5\",\"3\":\"6\"},{\"1\":\"f\",\"2\":\"6\",\"3\":\"7\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\nInstead of keep.rownames=TRUE, you can specify the name of the column containing the rownames from the data.frame.\n\nExample:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n( dt_letters <- as.data.table(df_letters, keep.rownames=\"letters\") )\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"letters\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"one\"],\"name\":[2],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"two\"],\"name\":[3],\"type\":[\"int\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"a\",\"2\":\"1\",\"3\":\"2\"},{\"1\":\"b\",\"2\":\"2\",\"3\":\"3\"},{\"1\":\"c\",\"2\":\"3\",\"3\":\"4\"},{\"1\":\"d\",\"2\":\"4\",\"3\":\"5\"},{\"1\":\"e\",\"2\":\"5\",\"3\":\"6\"},{\"1\":\"f\",\"2\":\"6\",\"3\":\"7\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n#### Task example: Convert ***iris*** to data table using as.data.table\n\nCreate a variable **iris_dt** that contains iris data set as data.table object. In this tutorial we are going to compare and analyze the default data set ***iris*** as data frame and data table objects.\n\n\n::: {.cell}\n\n```{.r .cell-code}\niris_dt <- as.data.table(iris)\n\n\niris\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"Sepal.Length\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Sepal.Width\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Petal.Length\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Petal.Width\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Species\"],\"name\":[5],\"type\":[\"fct\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"5.1\",\"2\":\"3.5\",\"3\":\"1.4\",\"4\":\"0.2\",\"5\":\"setosa\"},{\"1\":\"4.9\",\"2\":\"3.0\",\"3\":\"1.4\",\"4\":\"0.2\",\"5\":\"setosa\"},{\"1\":\"4.7\",\"2\":\"3.2\",\"3\":\"1.3\",\"4\":\"0.2\",\"5\":\"setosa\"},{\"1\":\"4.6\",\"2\":\"3.1\",\"3\":\"1.5\",\"4\":\"0.2\",\"5\":\"setosa\"},{\"1\":\"5.0\",\"2\":\"3.6\",\"3\":\"1.4\",\"4\":\"0.2\",\"5\":\"setosa\"},{\"1\":\"5.4\",\"2\":\"3.9\",\"3\":\"1.7\",\"4\":\"0.4\",\"5\":\"setosa\"},{\"1\":\"4.6\",\"2\":\"3.4\",\"3\":\"1.4\",\"4\":\"0.3\",\"5\":\"setosa\"},{\"1\":\"5.0\",\"2\":\"3.4\",\"3\":\"1.5\",\"4\":\"0.2\",\"5\":\"setosa\"},{\"1\":\"4.4\",\"2\":\"2.9\",\"3\":\"1.4\",\"4\":\"0.2\",\"5\":\"setosa\"},{\"1\":\"4.9\",\"2\":\"3.1\",\"3\":\"1.5\",\"4\":\"0.1\",\"5\":\"setosa\"},{\"1\":\"5.4\",\"2\":\"3.7\",\"3\":\"1.5\",\"4\":\"0.2\",\"5\":\"setosa\"},{\"1\":\"4.8\",\"2\":\"3.4\",\"3\":\"1.6\",\"4\":\"0.2\",\"5\":\"setosa\"},{\"1\":\"4.8\",\"2\":\"3.0\",\"3\":\"1.4\",\"4\":\"0.1\",\"5\":\"setosa\"},{\"1\":\"4.3\",\"2\":\"3.0\",\"3\":\"1.1\",\"4\":\"0.1\",\"5\":\"setosa\"},{\"1\":\"5.8\",\"2\":\"4.0\",\"3\":\"1.2\",\"4\":\"0.2\",\"5\":\"setosa\"},{\"1\":\"5.7\",\"2\":\"4.4\",\"3\":\"1.5\",\"4\":\"0.4\",\"5\":\"setosa\"},{\"1\":\"5.4\",\"2\":\"3.9\",\"3\":\"1.3\",\"4\":\"0.4\",\"5\":\"setosa\"},{\"1\":\"5.1\",\"2\":\"3.5\",\"3\":\"1.4\",\"4\":\"0.3\",\"5\":\"setosa\"},{\"1\":\"5.7\",\"2\":\"3.8\",\"3\":\"1.7\",\"4\":\"0.3\",\"5\":\"setosa\"},{\"1\":\"5.1\",\"2\":\"3.8\",\"3\":\"1.5\",\"4\":\"0.3\",\"5\":\"setosa\"},{\"1\":\"5.4\",\"2\":\"3.4\",\"3\":\"1.7\",\"4\":\"0.2\",\"5\":\"setosa\"},{\"1\":\"5.1\",\"2\":\"3.7\",\"3\":\"1.5\",\"4\":\"0.4\",\"5\":\"setosa\"},{\"1\":\"4.6\",\"2\":\"3.6\",\"3\":\"1.0\",\"4\":\"0.2\",\"5\":\"setosa\"},{\"1\":\"5.1\",\"2\":\"3.3\",\"3\":\"1.7\",\"4\":\"0.5\",\"5\":\"setosa\"},{\"1\":\"4.8\",\"2\":\"3.4\",\"3\":\"1.9\",\"4\":\"0.2\",\"5\":\"setosa\"},{\"1\":\"5.0\",\"2\":\"3.0\",\"3\":\"1.6\",\"4\":\"0.2\",\"5\":\"setosa\"},{\"1\":\"5.0\",\"2\":\"3.4\",\"3\":\"1.6\",\"4\":\"0.4\",\"5\":\"setosa\"},{\"1\":\"5.2\",\"2\":\"3.5\",\"3\":\"1.5\",\"4\":\"0.2\",\"5\":\"setosa\"},{\"1\":\"5.2\",\"2\":\"3.4\",\"3\":\"1.4\",\"4\":\"0.2\",\"5\":\"setosa\"},{\"1\":\"4.7\",\"2\":\"3.2\",\"3\":\"1.6\",\"4\":\"0.2\",\"5\":\"setosa\"},{\"1\":\"4.8\",\"2\":\"3.1\",\"3\":\"1.6\",\"4\":\"0.2\",\"5\":\"setosa\"},{\"1\":\"5.4\",\"2\":\"3.4\",\"3\":\"1.5\",\"4\":\"0.4\",\"5\":\"setosa\"},{\"1\":\"5.2\",\"2\":\"4.1\",\"3\":\"1.5\",\"4\":\"0.1\",\"5\":\"setosa\"},{\"1\":\"5.5\",\"2\":\"4.2\",\"3\":\"1.4\",\"4\":\"0.2\",\"5\":\"setosa\"},{\"1\":\"4.9\",\"2\":\"3.1\",\"3\":\"1.5\",\"4\":\"0.2\",\"5\":\"setosa\"},{\"1\":\"5.0\",\"2\":\"3.2\",\"3\":\"1.2\",\"4\":\"0.2\",\"5\":\"setosa\"},{\"1\":\"5.5\",\"2\":\"3.5\",\"3\":\"1.3\",\"4\":\"0.2\",\"5\":\"setosa\"},{\"1\":\"4.9\",\"2\":\"3.6\",\"3\":\"1.4\",\"4\":\"0.1\",\"5\":\"setosa\"},{\"1\":\"4.4\",\"2\":\"3.0\",\"3\":\"1.3\",\"4\":\"0.2\",\"5\":\"setosa\"},{\"1\":\"5.1\",\"2\":\"3.4\",\"3\":\"1.5\",\"4\":\"0.2\",\"5\":\"setosa\"},{\"1\":\"5.0\",\"2\":\"3.5\",\"3\":\"1.3\",\"4\":\"0.3\",\"5\":\"setosa\"},{\"1\":\"4.5\",\"2\":\"2.3\",\"3\":\"1.3\",\"4\":\"0.3\",\"5\":\"setosa\"},{\"1\":\"4.4\",\"2\":\"3.2\",\"3\":\"1.3\",\"4\":\"0.2\",\"5\":\"setosa\"},{\"1\":\"5.0\",\"2\":\"3.5\",\"3\":\"1.6\",\"4\":\"0.6\",\"5\":\"setosa\"},{\"1\":\"5.1\",\"2\":\"3.8\",\"3\":\"1.9\",\"4\":\"0.4\",\"5\":\"setosa\"},{\"1\":\"4.8\",\"2\":\"3.0\",\"3\":\"1.4\",\"4\":\"0.3\",\"5\":\"setosa\"},{\"1\":\"5.1\",\"2\":\"3.8\",\"3\":\"1.6\",\"4\":\"0.2\",\"5\":\"setosa\"},{\"1\":\"4.6\",\"2\":\"3.2\",\"3\":\"1.4\",\"4\":\"0.2\",\"5\":\"setosa\"},{\"1\":\"5.3\",\"2\":\"3.7\",\"3\":\"1.5\",\"4\":\"0.2\",\"5\":\"setosa\"},{\"1\":\"5.0\",\"2\":\"3.3\",\"3\":\"1.4\",\"4\":\"0.2\",\"5\":\"setosa\"},{\"1\":\"7.0\",\"2\":\"3.2\",\"3\":\"4.7\",\"4\":\"1.4\",\"5\":\"versicolor\"},{\"1\":\"6.4\",\"2\":\"3.2\",\"3\":\"4.5\",\"4\":\"1.5\",\"5\":\"versicolor\"},{\"1\":\"6.9\",\"2\":\"3.1\",\"3\":\"4.9\",\"4\":\"1.5\",\"5\":\"versicolor\"},{\"1\":\"5.5\",\"2\":\"2.3\",\"3\":\"4.0\",\"4\":\"1.3\",\"5\":\"versicolor\"},{\"1\":\"6.5\",\"2\":\"2.8\",\"3\":\"4.6\",\"4\":\"1.5\",\"5\":\"versicolor\"},{\"1\":\"5.7\",\"2\":\"2.8\",\"3\":\"4.5\",\"4\":\"1.3\",\"5\":\"versicolor\"},{\"1\":\"6.3\",\"2\":\"3.3\",\"3\":\"4.7\",\"4\":\"1.6\",\"5\":\"versicolor\"},{\"1\":\"4.9\",\"2\":\"2.4\",\"3\":\"3.3\",\"4\":\"1.0\",\"5\":\"versicolor\"},{\"1\":\"6.6\",\"2\":\"2.9\",\"3\":\"4.6\",\"4\":\"1.3\",\"5\":\"versicolor\"},{\"1\":\"5.2\",\"2\":\"2.7\",\"3\":\"3.9\",\"4\":\"1.4\",\"5\":\"versicolor\"},{\"1\":\"5.0\",\"2\":\"2.0\",\"3\":\"3.5\",\"4\":\"1.0\",\"5\":\"versicolor\"},{\"1\":\"5.9\",\"2\":\"3.0\",\"3\":\"4.2\",\"4\":\"1.5\",\"5\":\"versicolor\"},{\"1\":\"6.0\",\"2\":\"2.2\",\"3\":\"4.0\",\"4\":\"1.0\",\"5\":\"versicolor\"},{\"1\":\"6.1\",\"2\":\"2.9\",\"3\":\"4.7\",\"4\":\"1.4\",\"5\":\"versicolor\"},{\"1\":\"5.6\",\"2\":\"2.9\",\"3\":\"3.6\",\"4\":\"1.3\",\"5\":\"versicolor\"},{\"1\":\"6.7\",\"2\":\"3.1\",\"3\":\"4.4\",\"4\":\"1.4\",\"5\":\"versicolor\"},{\"1\":\"5.6\",\"2\":\"3.0\",\"3\":\"4.5\",\"4\":\"1.5\",\"5\":\"versicolor\"},{\"1\":\"5.8\",\"2\":\"2.7\",\"3\":\"4.1\",\"4\":\"1.0\",\"5\":\"versicolor\"},{\"1\":\"6.2\",\"2\":\"2.2\",\"3\":\"4.5\",\"4\":\"1.5\",\"5\":\"versicolor\"},{\"1\":\"5.6\",\"2\":\"2.5\",\"3\":\"3.9\",\"4\":\"1.1\",\"5\":\"versicolor\"},{\"1\":\"5.9\",\"2\":\"3.2\",\"3\":\"4.8\",\"4\":\"1.8\",\"5\":\"versicolor\"},{\"1\":\"6.1\",\"2\":\"2.8\",\"3\":\"4.0\",\"4\":\"1.3\",\"5\":\"versicolor\"},{\"1\":\"6.3\",\"2\":\"2.5\",\"3\":\"4.9\",\"4\":\"1.5\",\"5\":\"versicolor\"},{\"1\":\"6.1\",\"2\":\"2.8\",\"3\":\"4.7\",\"4\":\"1.2\",\"5\":\"versicolor\"},{\"1\":\"6.4\",\"2\":\"2.9\",\"3\":\"4.3\",\"4\":\"1.3\",\"5\":\"versicolor\"},{\"1\":\"6.6\",\"2\":\"3.0\",\"3\":\"4.4\",\"4\":\"1.4\",\"5\":\"versicolor\"},{\"1\":\"6.8\",\"2\":\"2.8\",\"3\":\"4.8\",\"4\":\"1.4\",\"5\":\"versicolor\"},{\"1\":\"6.7\",\"2\":\"3.0\",\"3\":\"5.0\",\"4\":\"1.7\",\"5\":\"versicolor\"},{\"1\":\"6.0\",\"2\":\"2.9\",\"3\":\"4.5\",\"4\":\"1.5\",\"5\":\"versicolor\"},{\"1\":\"5.7\",\"2\":\"2.6\",\"3\":\"3.5\",\"4\":\"1.0\",\"5\":\"versicolor\"},{\"1\":\"5.5\",\"2\":\"2.4\",\"3\":\"3.8\",\"4\":\"1.1\",\"5\":\"versicolor\"},{\"1\":\"5.5\",\"2\":\"2.4\",\"3\":\"3.7\",\"4\":\"1.0\",\"5\":\"versicolor\"},{\"1\":\"5.8\",\"2\":\"2.7\",\"3\":\"3.9\",\"4\":\"1.2\",\"5\":\"versicolor\"},{\"1\":\"6.0\",\"2\":\"2.7\",\"3\":\"5.1\",\"4\":\"1.6\",\"5\":\"versicolor\"},{\"1\":\"5.4\",\"2\":\"3.0\",\"3\":\"4.5\",\"4\":\"1.5\",\"5\":\"versicolor\"},{\"1\":\"6.0\",\"2\":\"3.4\",\"3\":\"4.5\",\"4\":\"1.6\",\"5\":\"versicolor\"},{\"1\":\"6.7\",\"2\":\"3.1\",\"3\":\"4.7\",\"4\":\"1.5\",\"5\":\"versicolor\"},{\"1\":\"6.3\",\"2\":\"2.3\",\"3\":\"4.4\",\"4\":\"1.3\",\"5\":\"versicolor\"},{\"1\":\"5.6\",\"2\":\"3.0\",\"3\":\"4.1\",\"4\":\"1.3\",\"5\":\"versicolor\"},{\"1\":\"5.5\",\"2\":\"2.5\",\"3\":\"4.0\",\"4\":\"1.3\",\"5\":\"versicolor\"},{\"1\":\"5.5\",\"2\":\"2.6\",\"3\":\"4.4\",\"4\":\"1.2\",\"5\":\"versicolor\"},{\"1\":\"6.1\",\"2\":\"3.0\",\"3\":\"4.6\",\"4\":\"1.4\",\"5\":\"versicolor\"},{\"1\":\"5.8\",\"2\":\"2.6\",\"3\":\"4.0\",\"4\":\"1.2\",\"5\":\"versicolor\"},{\"1\":\"5.0\",\"2\":\"2.3\",\"3\":\"3.3\",\"4\":\"1.0\",\"5\":\"versicolor\"},{\"1\":\"5.6\",\"2\":\"2.7\",\"3\":\"4.2\",\"4\":\"1.3\",\"5\":\"versicolor\"},{\"1\":\"5.7\",\"2\":\"3.0\",\"3\":\"4.2\",\"4\":\"1.2\",\"5\":\"versicolor\"},{\"1\":\"5.7\",\"2\":\"2.9\",\"3\":\"4.2\",\"4\":\"1.3\",\"5\":\"versicolor\"},{\"1\":\"6.2\",\"2\":\"2.9\",\"3\":\"4.3\",\"4\":\"1.3\",\"5\":\"versicolor\"},{\"1\":\"5.1\",\"2\":\"2.5\",\"3\":\"3.0\",\"4\":\"1.1\",\"5\":\"versicolor\"},{\"1\":\"5.7\",\"2\":\"2.8\",\"3\":\"4.1\",\"4\":\"1.3\",\"5\":\"versicolor\"},{\"1\":\"6.3\",\"2\":\"3.3\",\"3\":\"6.0\",\"4\":\"2.5\",\"5\":\"virginica\"},{\"1\":\"5.8\",\"2\":\"2.7\",\"3\":\"5.1\",\"4\":\"1.9\",\"5\":\"virginica\"},{\"1\":\"7.1\",\"2\":\"3.0\",\"3\":\"5.9\",\"4\":\"2.1\",\"5\":\"virginica\"},{\"1\":\"6.3\",\"2\":\"2.9\",\"3\":\"5.6\",\"4\":\"1.8\",\"5\":\"virginica\"},{\"1\":\"6.5\",\"2\":\"3.0\",\"3\":\"5.8\",\"4\":\"2.2\",\"5\":\"virginica\"},{\"1\":\"7.6\",\"2\":\"3.0\",\"3\":\"6.6\",\"4\":\"2.1\",\"5\":\"virginica\"},{\"1\":\"4.9\",\"2\":\"2.5\",\"3\":\"4.5\",\"4\":\"1.7\",\"5\":\"virginica\"},{\"1\":\"7.3\",\"2\":\"2.9\",\"3\":\"6.3\",\"4\":\"1.8\",\"5\":\"virginica\"},{\"1\":\"6.7\",\"2\":\"2.5\",\"3\":\"5.8\",\"4\":\"1.8\",\"5\":\"virginica\"},{\"1\":\"7.2\",\"2\":\"3.6\",\"3\":\"6.1\",\"4\":\"2.5\",\"5\":\"virginica\"},{\"1\":\"6.5\",\"2\":\"3.2\",\"3\":\"5.1\",\"4\":\"2.0\",\"5\":\"virginica\"},{\"1\":\"6.4\",\"2\":\"2.7\",\"3\":\"5.3\",\"4\":\"1.9\",\"5\":\"virginica\"},{\"1\":\"6.8\",\"2\":\"3.0\",\"3\":\"5.5\",\"4\":\"2.1\",\"5\":\"virginica\"},{\"1\":\"5.7\",\"2\":\"2.5\",\"3\":\"5.0\",\"4\":\"2.0\",\"5\":\"virginica\"},{\"1\":\"5.8\",\"2\":\"2.8\",\"3\":\"5.1\",\"4\":\"2.4\",\"5\":\"virginica\"},{\"1\":\"6.4\",\"2\":\"3.2\",\"3\":\"5.3\",\"4\":\"2.3\",\"5\":\"virginica\"},{\"1\":\"6.5\",\"2\":\"3.0\",\"3\":\"5.5\",\"4\":\"1.8\",\"5\":\"virginica\"},{\"1\":\"7.7\",\"2\":\"3.8\",\"3\":\"6.7\",\"4\":\"2.2\",\"5\":\"virginica\"},{\"1\":\"7.7\",\"2\":\"2.6\",\"3\":\"6.9\",\"4\":\"2.3\",\"5\":\"virginica\"},{\"1\":\"6.0\",\"2\":\"2.2\",\"3\":\"5.0\",\"4\":\"1.5\",\"5\":\"virginica\"},{\"1\":\"6.9\",\"2\":\"3.2\",\"3\":\"5.7\",\"4\":\"2.3\",\"5\":\"virginica\"},{\"1\":\"5.6\",\"2\":\"2.8\",\"3\":\"4.9\",\"4\":\"2.0\",\"5\":\"virginica\"},{\"1\":\"7.7\",\"2\":\"2.8\",\"3\":\"6.7\",\"4\":\"2.0\",\"5\":\"virginica\"},{\"1\":\"6.3\",\"2\":\"2.7\",\"3\":\"4.9\",\"4\":\"1.8\",\"5\":\"virginica\"},{\"1\":\"6.7\",\"2\":\"3.3\",\"3\":\"5.7\",\"4\":\"2.1\",\"5\":\"virginica\"},{\"1\":\"7.2\",\"2\":\"3.2\",\"3\":\"6.0\",\"4\":\"1.8\",\"5\":\"virginica\"},{\"1\":\"6.2\",\"2\":\"2.8\",\"3\":\"4.8\",\"4\":\"1.8\",\"5\":\"virginica\"},{\"1\":\"6.1\",\"2\":\"3.0\",\"3\":\"4.9\",\"4\":\"1.8\",\"5\":\"virginica\"},{\"1\":\"6.4\",\"2\":\"2.8\",\"3\":\"5.6\",\"4\":\"2.1\",\"5\":\"virginica\"},{\"1\":\"7.2\",\"2\":\"3.0\",\"3\":\"5.8\",\"4\":\"1.6\",\"5\":\"virginica\"},{\"1\":\"7.4\",\"2\":\"2.8\",\"3\":\"6.1\",\"4\":\"1.9\",\"5\":\"virginica\"},{\"1\":\"7.9\",\"2\":\"3.8\",\"3\":\"6.4\",\"4\":\"2.0\",\"5\":\"virginica\"},{\"1\":\"6.4\",\"2\":\"2.8\",\"3\":\"5.6\",\"4\":\"2.2\",\"5\":\"virginica\"},{\"1\":\"6.3\",\"2\":\"2.8\",\"3\":\"5.1\",\"4\":\"1.5\",\"5\":\"virginica\"},{\"1\":\"6.1\",\"2\":\"2.6\",\"3\":\"5.6\",\"4\":\"1.4\",\"5\":\"virginica\"},{\"1\":\"7.7\",\"2\":\"3.0\",\"3\":\"6.1\",\"4\":\"2.3\",\"5\":\"virginica\"},{\"1\":\"6.3\",\"2\":\"3.4\",\"3\":\"5.6\",\"4\":\"2.4\",\"5\":\"virginica\"},{\"1\":\"6.4\",\"2\":\"3.1\",\"3\":\"5.5\",\"4\":\"1.8\",\"5\":\"virginica\"},{\"1\":\"6.0\",\"2\":\"3.0\",\"3\":\"4.8\",\"4\":\"1.8\",\"5\":\"virginica\"},{\"1\":\"6.9\",\"2\":\"3.1\",\"3\":\"5.4\",\"4\":\"2.1\",\"5\":\"virginica\"},{\"1\":\"6.7\",\"2\":\"3.1\",\"3\":\"5.6\",\"4\":\"2.4\",\"5\":\"virginica\"},{\"1\":\"6.9\",\"2\":\"3.1\",\"3\":\"5.1\",\"4\":\"2.3\",\"5\":\"virginica\"},{\"1\":\"5.8\",\"2\":\"2.7\",\"3\":\"5.1\",\"4\":\"1.9\",\"5\":\"virginica\"},{\"1\":\"6.8\",\"2\":\"3.2\",\"3\":\"5.9\",\"4\":\"2.3\",\"5\":\"virginica\"},{\"1\":\"6.7\",\"2\":\"3.3\",\"3\":\"5.7\",\"4\":\"2.5\",\"5\":\"virginica\"},{\"1\":\"6.7\",\"2\":\"3.0\",\"3\":\"5.2\",\"4\":\"2.3\",\"5\":\"virginica\"},{\"1\":\"6.3\",\"2\":\"2.5\",\"3\":\"5.0\",\"4\":\"1.9\",\"5\":\"virginica\"},{\"1\":\"6.5\",\"2\":\"3.0\",\"3\":\"5.2\",\"4\":\"2.0\",\"5\":\"virginica\"},{\"1\":\"6.2\",\"2\":\"3.4\",\"3\":\"5.4\",\"4\":\"2.3\",\"5\":\"virginica\"},{\"1\":\"5.9\",\"2\":\"3.0\",\"3\":\"5.1\",\"4\":\"1.8\",\"5\":\"virginica\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n```{.r .cell-code}\nrownames(iris)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  [1] \"1\"   \"2\"   \"3\"   \"4\"   \"5\"   \"6\"   \"7\"   \"8\"   \"9\"   \"10\"  \"11\"  \"12\" \n [13] \"13\"  \"14\"  \"15\"  \"16\"  \"17\"  \"18\"  \"19\"  \"20\"  \"21\"  \"22\"  \"23\"  \"24\" \n [25] \"25\"  \"26\"  \"27\"  \"28\"  \"29\"  \"30\"  \"31\"  \"32\"  \"33\"  \"34\"  \"35\"  \"36\" \n [37] \"37\"  \"38\"  \"39\"  \"40\"  \"41\"  \"42\"  \"43\"  \"44\"  \"45\"  \"46\"  \"47\"  \"48\" \n [49] \"49\"  \"50\"  \"51\"  \"52\"  \"53\"  \"54\"  \"55\"  \"56\"  \"57\"  \"58\"  \"59\"  \"60\" \n [61] \"61\"  \"62\"  \"63\"  \"64\"  \"65\"  \"66\"  \"67\"  \"68\"  \"69\"  \"70\"  \"71\"  \"72\" \n [73] \"73\"  \"74\"  \"75\"  \"76\"  \"77\"  \"78\"  \"79\"  \"80\"  \"81\"  \"82\"  \"83\"  \"84\" \n [85] \"85\"  \"86\"  \"87\"  \"88\"  \"89\"  \"90\"  \"91\"  \"92\"  \"93\"  \"94\"  \"95\"  \"96\" \n [97] \"97\"  \"98\"  \"99\"  \"100\" \"101\" \"102\" \"103\" \"104\" \"105\" \"106\" \"107\" \"108\"\n[109] \"109\" \"110\" \"111\" \"112\" \"113\" \"114\" \"115\" \"116\" \"117\" \"118\" \"119\" \"120\"\n[121] \"121\" \"122\" \"123\" \"124\" \"125\" \"126\" \"127\" \"128\" \"129\" \"130\" \"131\" \"132\"\n[133] \"133\" \"134\" \"135\" \"136\" \"137\" \"138\" \"139\" \"140\" \"141\" \"142\" \"143\" \"144\"\n[145] \"145\" \"146\" \"147\" \"148\" \"149\" \"150\"\n```\n:::\n\n```{.r .cell-code}\nrownames(iris_dt)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  [1] \"1\"   \"2\"   \"3\"   \"4\"   \"5\"   \"6\"   \"7\"   \"8\"   \"9\"   \"10\"  \"11\"  \"12\" \n [13] \"13\"  \"14\"  \"15\"  \"16\"  \"17\"  \"18\"  \"19\"  \"20\"  \"21\"  \"22\"  \"23\"  \"24\" \n [25] \"25\"  \"26\"  \"27\"  \"28\"  \"29\"  \"30\"  \"31\"  \"32\"  \"33\"  \"34\"  \"35\"  \"36\" \n [37] \"37\"  \"38\"  \"39\"  \"40\"  \"41\"  \"42\"  \"43\"  \"44\"  \"45\"  \"46\"  \"47\"  \"48\" \n [49] \"49\"  \"50\"  \"51\"  \"52\"  \"53\"  \"54\"  \"55\"  \"56\"  \"57\"  \"58\"  \"59\"  \"60\" \n [61] \"61\"  \"62\"  \"63\"  \"64\"  \"65\"  \"66\"  \"67\"  \"68\"  \"69\"  \"70\"  \"71\"  \"72\" \n [73] \"73\"  \"74\"  \"75\"  \"76\"  \"77\"  \"78\"  \"79\"  \"80\"  \"81\"  \"82\"  \"83\"  \"84\" \n [85] \"85\"  \"86\"  \"87\"  \"88\"  \"89\"  \"90\"  \"91\"  \"92\"  \"93\"  \"94\"  \"95\"  \"96\" \n [97] \"97\"  \"98\"  \"99\"  \"100\" \"101\" \"102\" \"103\" \"104\" \"105\" \"106\" \"107\" \"108\"\n[109] \"109\" \"110\" \"111\" \"112\" \"113\" \"114\" \"115\" \"116\" \"117\" \"118\" \"119\" \"120\"\n[121] \"121\" \"122\" \"123\" \"124\" \"125\" \"126\" \"127\" \"128\" \"129\" \"130\" \"131\" \"132\"\n[133] \"133\" \"134\" \"135\" \"136\" \"137\" \"138\" \"139\" \"140\" \"141\" \"142\" \"143\" \"144\"\n[145] \"145\" \"146\" \"147\" \"148\" \"149\" \"150\"\n```\n:::\n:::\n\n\n## Row subsetting\n\n### Syntax comparison\n\n+----------------------------------+-------------------+---------------+\n| Operation                        | *data.frame*      | ```           |\n|                                  |                   | _data.table_  |\n|                                  |                   | ```           |\n+==================================+===================+===============+\n| Subseting rows                   | `df[1:20, ]`      | `df[1:20]`    |\n+----------------------------------+-------------------+---------------+\n| Subseting rows based on criteria | `df[df$id < 4, ]` | `df[id < 4]`  |\n+----------------------------------+-------------------+---------------+\n\n##### Task\n\nSelect all rows in **iris_dt** with Sepal.Length less than 6.7 and Petal.Length less than 1.2.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Write the solution here\n\niris_dt[Sepal.Length < 6.7 & Petal.Length < 1.2]\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"Sepal.Length\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Sepal.Width\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Petal.Length\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Petal.Width\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Species\"],\"name\":[5],\"type\":[\"fct\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"4.3\",\"2\":\"3.0\",\"3\":\"1.1\",\"4\":\"0.1\",\"5\":\"setosa\"},{\"1\":\"4.6\",\"2\":\"3.6\",\"3\":\"1.0\",\"4\":\"0.2\",\"5\":\"setosa\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\nSelect only setosa species with more than 0.3 Petal.Width.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Write the solution here\niris_dt[Species == \"setosa\" & Petal.Width < 0.3]\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"Sepal.Length\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Sepal.Width\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Petal.Length\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Petal.Width\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Species\"],\"name\":[5],\"type\":[\"fct\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"5.1\",\"2\":\"3.5\",\"3\":\"1.4\",\"4\":\"0.2\",\"5\":\"setosa\"},{\"1\":\"4.9\",\"2\":\"3.0\",\"3\":\"1.4\",\"4\":\"0.2\",\"5\":\"setosa\"},{\"1\":\"4.7\",\"2\":\"3.2\",\"3\":\"1.3\",\"4\":\"0.2\",\"5\":\"setosa\"},{\"1\":\"4.6\",\"2\":\"3.1\",\"3\":\"1.5\",\"4\":\"0.2\",\"5\":\"setosa\"},{\"1\":\"5.0\",\"2\":\"3.6\",\"3\":\"1.4\",\"4\":\"0.2\",\"5\":\"setosa\"},{\"1\":\"5.0\",\"2\":\"3.4\",\"3\":\"1.5\",\"4\":\"0.2\",\"5\":\"setosa\"},{\"1\":\"4.4\",\"2\":\"2.9\",\"3\":\"1.4\",\"4\":\"0.2\",\"5\":\"setosa\"},{\"1\":\"4.9\",\"2\":\"3.1\",\"3\":\"1.5\",\"4\":\"0.1\",\"5\":\"setosa\"},{\"1\":\"5.4\",\"2\":\"3.7\",\"3\":\"1.5\",\"4\":\"0.2\",\"5\":\"setosa\"},{\"1\":\"4.8\",\"2\":\"3.4\",\"3\":\"1.6\",\"4\":\"0.2\",\"5\":\"setosa\"},{\"1\":\"4.8\",\"2\":\"3.0\",\"3\":\"1.4\",\"4\":\"0.1\",\"5\":\"setosa\"},{\"1\":\"4.3\",\"2\":\"3.0\",\"3\":\"1.1\",\"4\":\"0.1\",\"5\":\"setosa\"},{\"1\":\"5.8\",\"2\":\"4.0\",\"3\":\"1.2\",\"4\":\"0.2\",\"5\":\"setosa\"},{\"1\":\"5.4\",\"2\":\"3.4\",\"3\":\"1.7\",\"4\":\"0.2\",\"5\":\"setosa\"},{\"1\":\"4.6\",\"2\":\"3.6\",\"3\":\"1.0\",\"4\":\"0.2\",\"5\":\"setosa\"},{\"1\":\"4.8\",\"2\":\"3.4\",\"3\":\"1.9\",\"4\":\"0.2\",\"5\":\"setosa\"},{\"1\":\"5.0\",\"2\":\"3.0\",\"3\":\"1.6\",\"4\":\"0.2\",\"5\":\"setosa\"},{\"1\":\"5.2\",\"2\":\"3.5\",\"3\":\"1.5\",\"4\":\"0.2\",\"5\":\"setosa\"},{\"1\":\"5.2\",\"2\":\"3.4\",\"3\":\"1.4\",\"4\":\"0.2\",\"5\":\"setosa\"},{\"1\":\"4.7\",\"2\":\"3.2\",\"3\":\"1.6\",\"4\":\"0.2\",\"5\":\"setosa\"},{\"1\":\"4.8\",\"2\":\"3.1\",\"3\":\"1.6\",\"4\":\"0.2\",\"5\":\"setosa\"},{\"1\":\"5.2\",\"2\":\"4.1\",\"3\":\"1.5\",\"4\":\"0.1\",\"5\":\"setosa\"},{\"1\":\"5.5\",\"2\":\"4.2\",\"3\":\"1.4\",\"4\":\"0.2\",\"5\":\"setosa\"},{\"1\":\"4.9\",\"2\":\"3.1\",\"3\":\"1.5\",\"4\":\"0.2\",\"5\":\"setosa\"},{\"1\":\"5.0\",\"2\":\"3.2\",\"3\":\"1.2\",\"4\":\"0.2\",\"5\":\"setosa\"},{\"1\":\"5.5\",\"2\":\"3.5\",\"3\":\"1.3\",\"4\":\"0.2\",\"5\":\"setosa\"},{\"1\":\"4.9\",\"2\":\"3.6\",\"3\":\"1.4\",\"4\":\"0.1\",\"5\":\"setosa\"},{\"1\":\"4.4\",\"2\":\"3.0\",\"3\":\"1.3\",\"4\":\"0.2\",\"5\":\"setosa\"},{\"1\":\"5.1\",\"2\":\"3.4\",\"3\":\"1.5\",\"4\":\"0.2\",\"5\":\"setosa\"},{\"1\":\"4.4\",\"2\":\"3.2\",\"3\":\"1.3\",\"4\":\"0.2\",\"5\":\"setosa\"},{\"1\":\"5.1\",\"2\":\"3.8\",\"3\":\"1.6\",\"4\":\"0.2\",\"5\":\"setosa\"},{\"1\":\"4.6\",\"2\":\"3.2\",\"3\":\"1.4\",\"4\":\"0.2\",\"5\":\"setosa\"},{\"1\":\"5.3\",\"2\":\"3.7\",\"3\":\"1.5\",\"4\":\"0.2\",\"5\":\"setosa\"},{\"1\":\"5.0\",\"2\":\"3.3\",\"3\":\"1.4\",\"4\":\"0.2\",\"5\":\"setosa\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n## Column subsetting\n\n### Syntax comparison\n\n+-------------------------------------+-----------------+----------------+\n| Operation                           | *data.frame*    | ```            |\n|                                     |                 | _data.table_   |\n|                                     |                 | ```            |\n+=====================================+=================+================+\n| Subseting columns                   | `df[, c(1,5)]`  | `df[, c(1,5)]` |\n+-------------------------------------+-----------------+----------------+\n| Subseting columns based on colnames | `df[, c(\"id\")]` | `df[,.(id)]`   |\n+-------------------------------------+-----------------+----------------+\n\n::: callout-important\n*Data.table* does not use **c()** but **.()** which represents list\n:::\n\nSelect columns Petal.Length and Petal.Width and first 3 rows\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Write the solution here\n\niris_dt[ 1:3, .(Petal.Length, Petal.Width) ]\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"Petal.Length\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Petal.Width\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"1.4\",\"2\":\"0.2\"},{\"1\":\"1.4\",\"2\":\"0.2\"},{\"1\":\"1.3\",\"2\":\"0.2\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n### Additional methods of subsetting columns in data.table\n\n::: callout-tip\n1.  **Using a character vector of column names**\n\nYou can store column names in a vector and use `..` to evaluate it inside `data.table`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncnames <- c(\"Petal.Length\", \"Petal.Width\")\n\niris_dt[1:3, ..cnames]\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"Petal.Length\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Petal.Width\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"1.4\",\"2\":\"0.2\"},{\"1\":\"1.4\",\"2\":\"0.2\"},{\"1\":\"1.3\",\"2\":\"0.2\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n2.  **Using a range of column names**\n\nYou can select a range of columns using the `:` operator between two column names.\n\n\n::: {.cell}\n\n```{.r .cell-code}\niris_dt[1:3, Sepal.Length:Petal.Width]\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"Sepal.Length\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Sepal.Width\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Petal.Length\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Petal.Width\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"5.1\",\"2\":\"3.5\",\"3\":\"1.4\",\"4\":\"0.2\"},{\"1\":\"4.9\",\"2\":\"3.0\",\"3\":\"1.4\",\"4\":\"0.2\"},{\"1\":\"4.7\",\"2\":\"3.2\",\"3\":\"1.3\",\"4\":\"0.2\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n3.  **Negative subsetting to exclude columns**\n\nUse `-()` or `!()` to exclude a range of columns.\n\n\n::: {.cell}\n\n```{.r .cell-code}\niris_dt[1:3, -(Sepal.Length:Petal.Width)]\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"Species\"],\"name\":[1],\"type\":[\"fct\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"setosa\"},{\"1\":\"setosa\"},{\"1\":\"setosa\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n```{.r .cell-code}\niris_dt[1:3, !(Sepal.Length:Petal.Length)]\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"Petal.Width\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Species\"],\"name\":[2],\"type\":[\"fct\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"0.2\",\"2\":\"setosa\"},{\"1\":\"0.2\",\"2\":\"setosa\"},{\"1\":\"0.2\",\"2\":\"setosa\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\nNote: `Sepal.Length:Petal.Width` works only in column context---it is not the same as numeric indexing.\n:::\n\n##### Task\n\nSelect all rows in **iris_dt** with Sepal.Width equal to **3.0**, but show only columns for **Species** and *Sepal.Width* (Do it by using column names!). You may also try other methods of subsetting.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Write the solution here\n```\n:::\n\n\n## Operation on columns\n\n### Syntax comparison\n\n+--------------------------------+--------------------------------+---------------------------+\n| Operation                      | *data.frame*                   | *data.table*              |\n+================================+================================+===========================+\n| Calculate sum                  | `sum(df$id)`                   | `df[, sum(id)]`           |\n+--------------------------------+--------------------------------+---------------------------+\n| Calculate sum by group         | `by(df$id,` `df$group,` `sum)` | `df[, sum(id), by=group]` |\n+--------------------------------+--------------------------------+---------------------------+\n| Calling column out as a vector | `df$id`                        | `df[, id]`                |\n+--------------------------------+--------------------------------+---------------------------+\n\nCalculate mean of Sepal.Width for all species.\n\n\n::: {.cell}\n\n```{.r .cell-code}\niris_dt[, mean(Sepal.Width)]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 3.057333\n```\n:::\n:::\n\n\nCalculate mean of Sepal.Width for and for each species\n\n\n::: {.cell}\n\n```{.r .cell-code}\niris_dt[, mean(Sepal.Width), by=Species] \n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"Species\"],\"name\":[1],\"type\":[\"fct\"],\"align\":[\"left\"]},{\"label\":[\"V1\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"setosa\",\"2\":\"3.428\"},{\"1\":\"versicolor\",\"2\":\"2.770\"},{\"1\":\"virginica\",\"2\":\"2.974\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\nAlso the following syntax works for data.table because in the third part it is always the group operation when calculating something per rows: `iris_dt[, mean(Sepal.Width), Species]`\n\n::: callout-important\n# Adding the column immediately when performing the operation in data.table\n\nSyntax: `df[, .(new_col = sum(id) ), by=group]`\n\nExample:\n\n\n::: {.cell}\n\n```{.r .cell-code}\niris_dt[, .( mean_col = mean(Sepal.Width) ), by=Species]\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"Species\"],\"name\":[1],\"type\":[\"fct\"],\"align\":[\"left\"]},{\"label\":[\"mean_col\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"setosa\",\"2\":\"3.428\"},{\"1\":\"versicolor\",\"2\":\"2.770\"},{\"1\":\"virginica\",\"2\":\"2.974\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n:::\n\n### The power of *data.table* over *data.frame*\n\n`data.table` offers an elegant and efficient way to perform multiple calculations on columns and save the results --- all in a concise syntax.\n\nExample: Calculate mean, standard deviation, max, min, and count of `Sepal.Width` by Species, then order by mean. ::: callout-important With `data.table`, you can chain multiple operations using square brackets `[]`, similar in spirit to the `dplyr` pipe `%>%`. :::\n\n+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| *data.frame*                                                                                                                                                                                                                                                 | *data.table*                                                                                                                                                    |\n+==============================================================================================================================================================================================================================================================+=================================================================================================================================================================+\n| <font size=\"4\">`meanic <- by(iris$Sepal.Width,INDICES = iris$Species, mean)` `sdic <- by(iris$Sepal.Width,INDICES = iris$Species, sd)` `maxx <- by(iris$Sepal.Width,INDICES = iris$Species, max)` `minx <- by(iris$Sepal.Width,INDICES = iris$Species, min)` | <font size=\"4\">`iris_dt[ ,` `.(mean=mean(Sepal.Width),` `sd=sd(Sepal.Width),` `min_x= min(Sepal.Width),` `max_x= max(Sepal.Width)),` `by=Species][order(mean)]` |\n|                                                                                                                                                                                                                                                              |                                                                                                                                                                 |\n| `res_df <- data.frame(as.numeric(meanic),` `as.numeric(sdic),` `as.numeric(maxx),` `as.numeric(minx))`                                                                                                                                                       | </font>                                                                                                                                                         |\n|                                                                                                                                                                                                                                                              |                                                                                                                                                                 |\n| `res_df[order(res_df$as.numeric.meanic.),]`</font>                                                                                                                                                                                                           |                                                                                                                                                                 |\n+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------+\n\nOutput example\n\n\n::: {.cell}\n\n```{.r .cell-code}\niris_dt[ , \n        .(mean=mean(Sepal.Width),\n          sd=sd(Sepal.Width),\n          min_x= min(Sepal.Width),\n          max_x= max(Sepal.Width)),\n        by=Species][order(mean)]\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"Species\"],\"name\":[1],\"type\":[\"fct\"],\"align\":[\"left\"]},{\"label\":[\"mean\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"sd\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"min_x\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"max_x\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"versicolor\",\"2\":\"2.770\",\"3\":\"0.3137983\",\"4\":\"2.0\",\"5\":\"3.4\"},{\"1\":\"virginica\",\"2\":\"2.974\",\"3\":\"0.3224966\",\"4\":\"2.2\",\"5\":\"3.8\"},{\"1\":\"setosa\",\"2\":\"3.428\",\"3\":\"0.3790644\",\"4\":\"2.3\",\"5\":\"4.4\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n##### Task\n\nSelect all rows where Sepal.Length \\< 6.7 and flower species **virginica** and calculate mean Petal.Width in **iris_dt.** Do it with and without chaining.\n\n*With chaining*\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Write the solution here\n```\n:::\n\n\n*No chaining*\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Write the solution here\n```\n:::\n\n\n### Adding new permanent columns\n\nAdding one columns in data table is done with **:=** and multiple columns with **':='**.\n\nHere is a new column that contains the maximal sepal width for each species was added.\n\n\n::: {.cell}\n\n```{.r .cell-code}\niris_dt[, max_width1 := max(Sepal.Width), Species]\niris_dt[1:3]\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"Sepal.Length\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Sepal.Width\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Petal.Length\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Petal.Width\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Species\"],\"name\":[5],\"type\":[\"fct\"],\"align\":[\"left\"]},{\"label\":[\"max_width1\"],\"name\":[6],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"5.1\",\"2\":\"3.5\",\"3\":\"1.4\",\"4\":\"0.2\",\"5\":\"setosa\",\"6\":\"4.4\"},{\"1\":\"4.9\",\"2\":\"3.0\",\"3\":\"1.4\",\"4\":\"0.2\",\"5\":\"setosa\",\"6\":\"4.4\"},{\"1\":\"4.7\",\"2\":\"3.2\",\"3\":\"1.3\",\"4\":\"0.2\",\"5\":\"setosa\",\"6\":\"4.4\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\nAddition of multiple columns.\n\n\n::: {.cell}\n\n```{.r .cell-code}\niris_dt[, \":=\" (max_width2 = max(Sepal.Width),  \n                max_width3 = max(Sepal.Length) ),\n        by=.(Species)]\niris_dt[1:3]\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"Sepal.Length\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Sepal.Width\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Petal.Length\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Petal.Width\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Species\"],\"name\":[5],\"type\":[\"fct\"],\"align\":[\"left\"]},{\"label\":[\"max_width1\"],\"name\":[6],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"max_width2\"],\"name\":[7],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"max_width3\"],\"name\":[8],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"5.1\",\"2\":\"3.5\",\"3\":\"1.4\",\"4\":\"0.2\",\"5\":\"setosa\",\"6\":\"4.4\",\"7\":\"4.4\",\"8\":\"5.8\"},{\"1\":\"4.9\",\"2\":\"3.0\",\"3\":\"1.4\",\"4\":\"0.2\",\"5\":\"setosa\",\"6\":\"4.4\",\"7\":\"4.4\",\"8\":\"5.8\"},{\"1\":\"4.7\",\"2\":\"3.2\",\"3\":\"1.3\",\"4\":\"0.2\",\"5\":\"setosa\",\"6\":\"4.4\",\"7\":\"4.4\",\"8\":\"5.8\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n##### Task: Add a new column\n\nAdd columns to iris_dt that represent mean and sd of `Petal.Width` grouped by species. Columns are called **meanPW** and **sdPW**.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Write the solution here\n\niris_dt[, \":=\" (meanPW = mean(Petal.Width),  \n                sdPW = sd(Petal.Width) ),\n        by=.(Species)]\niris_dt[1:3]\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"Sepal.Length\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Sepal.Width\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Petal.Length\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Petal.Width\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Species\"],\"name\":[5],\"type\":[\"fct\"],\"align\":[\"left\"]},{\"label\":[\"max_width1\"],\"name\":[6],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"max_width2\"],\"name\":[7],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"max_width3\"],\"name\":[8],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"meanPW\"],\"name\":[9],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"sdPW\"],\"name\":[10],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"5.1\",\"2\":\"3.5\",\"3\":\"1.4\",\"4\":\"0.2\",\"5\":\"setosa\",\"6\":\"4.4\",\"7\":\"4.4\",\"8\":\"5.8\",\"9\":\"0.246\",\"10\":\"0.1053856\"},{\"1\":\"4.9\",\"2\":\"3.0\",\"3\":\"1.4\",\"4\":\"0.2\",\"5\":\"setosa\",\"6\":\"4.4\",\"7\":\"4.4\",\"8\":\"5.8\",\"9\":\"0.246\",\"10\":\"0.1053856\"},{\"1\":\"4.7\",\"2\":\"3.2\",\"3\":\"1.3\",\"4\":\"0.2\",\"5\":\"setosa\",\"6\":\"4.4\",\"7\":\"4.4\",\"8\":\"5.8\",\"9\":\"0.246\",\"10\":\"0.1053856\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n```{.r .cell-code}\n###how to remove columns :D \niris_dt[, sdPW := NULL]\niris_dt[1:3]\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"Sepal.Length\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Sepal.Width\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Petal.Length\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Petal.Width\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Species\"],\"name\":[5],\"type\":[\"fct\"],\"align\":[\"left\"]},{\"label\":[\"max_width1\"],\"name\":[6],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"max_width2\"],\"name\":[7],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"max_width3\"],\"name\":[8],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"meanPW\"],\"name\":[9],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"5.1\",\"2\":\"3.5\",\"3\":\"1.4\",\"4\":\"0.2\",\"5\":\"setosa\",\"6\":\"4.4\",\"7\":\"4.4\",\"8\":\"5.8\",\"9\":\"0.246\"},{\"1\":\"4.9\",\"2\":\"3.0\",\"3\":\"1.4\",\"4\":\"0.2\",\"5\":\"setosa\",\"6\":\"4.4\",\"7\":\"4.4\",\"8\":\"5.8\",\"9\":\"0.246\"},{\"1\":\"4.7\",\"2\":\"3.2\",\"3\":\"1.3\",\"4\":\"0.2\",\"5\":\"setosa\",\"6\":\"4.4\",\"7\":\"4.4\",\"8\":\"5.8\",\"9\":\"0.246\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\nUse function **uniqueN()** to check how many unique mean `Petal.Width` there are in total and by Species group.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Write the solution here\n```\n:::\n\n\n### Special symbols in data.table\n\n**.N** (an integer containing the number of rows in the group)\n\n\n::: {.cell}\n\n```{.r .cell-code}\niris_dt[, .N]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 150\n```\n:::\n:::\n\n\nCan be used on groups. What is happening here with this subsetting in group?\n\n\n::: {.cell}\n\n```{.r .cell-code}\niris_dt[, .N, by=.(Species, Sepal.Length>=4.8)]\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"Species\"],\"name\":[1],\"type\":[\"fct\"],\"align\":[\"left\"]},{\"label\":[\"Sepal.Length\"],\"name\":[2],\"type\":[\"lgl\"],\"align\":[\"right\"]},{\"label\":[\"N\"],\"name\":[3],\"type\":[\"int\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"setosa\",\"2\":\"TRUE\",\"3\":\"39\"},{\"1\":\"setosa\",\"2\":\"FALSE\",\"3\":\"11\"},{\"1\":\"versicolor\",\"2\":\"TRUE\",\"3\":\"50\"},{\"1\":\"virginica\",\"2\":\"TRUE\",\"3\":\"50\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n##### Task: :=, .N\n\nAdd columns to **iris_dt** that represent number of observations of all rows for which Petal.Length is smaller than 6.5 in **iris_dt** grouped by species.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Write the solution here\n```\n:::\n\n\nMoreover, show only the newly added columns in your final results and use `na.omit()` to remove all missing values from your table\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Write the solution here\n```\n:::\n\n\nOne great benefit of data.table is the ability to **sub-assign by reference**: Try it: select all rows that have species==\"virginica\" and rename those Species entries using `:=` to `new_virginica`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Write the solution here\n```\n:::\n\n\n## Subset of the original Data.table\n\n**.SD** (a smaller data.table that is a **Subset** of the original **Data.table** for each group)\n\n**.SDcols** (subset columns which are then used by .SD)\n\n-   Select all columns with .SD. Select only a subset of all columns by .SDcols\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](Day2_IRB25_part1_files/figure-html/unnamed-chunk-29-1.png){fig-align='center' width=672}\n:::\n:::\n\n\nSelecting columns can be done by writing column names in .SDcols (Note: It is important to write it as stings in *c()* )\n\n\n::: {.cell}\n\n```{.r .cell-code}\niris_dt[, .SD, .SDcols=c(\"Sepal.Width\", \"Species\")][1:2]\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"Sepal.Width\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Species\"],\"name\":[2],\"type\":[\"fct\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"3.5\",\"2\":\"setosa\"},{\"1\":\"3.0\",\"2\":\"setosa\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\nThis allows powerful calculation on subset of desired columns and groups.\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](Day2_IRB25_part1_files/figure-html/unnamed-chunk-31-1.png){fig-align='center' width=672}\n:::\n:::\n\n\nYou can use `lapply()` together with `.SD` (Subset of Data) to apply functions to selected columns within groups. This is particularly useful for performing calculations like mean or sum on a subset of numeric columns.\n\n\n::: {.cell}\n\n```{.r .cell-code}\niris_dt[, lapply(.SD, mean), by=Species, .SDcols=1:2]\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"Species\"],\"name\":[1],\"type\":[\"fct\"],\"align\":[\"left\"]},{\"label\":[\"Sepal.Length\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Sepal.Width\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"setosa\",\"2\":\"5.006\",\"3\":\"3.428\"},{\"1\":\"versicolor\",\"2\":\"5.936\",\"3\":\"2.770\"},{\"1\":\"virginica\",\"2\":\"6.588\",\"3\":\"2.974\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\nApply mean to all numeric columns by species\n\n\n::: {.cell}\n\n```{.r .cell-code}\niris_dt[, lapply(.SD, mean), by=Species, .SDcols=is.numeric]\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"Species\"],\"name\":[1],\"type\":[\"fct\"],\"align\":[\"left\"]},{\"label\":[\"Sepal.Length\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Sepal.Width\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Petal.Length\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Petal.Width\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"max_width1\"],\"name\":[6],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"max_width2\"],\"name\":[7],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"max_width3\"],\"name\":[8],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"meanPW\"],\"name\":[9],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"setosa\",\"2\":\"5.006\",\"3\":\"3.428\",\"4\":\"1.462\",\"5\":\"0.246\",\"6\":\"4.4\",\"7\":\"4.4\",\"8\":\"5.8\",\"9\":\"0.246\"},{\"1\":\"versicolor\",\"2\":\"5.936\",\"3\":\"2.770\",\"4\":\"4.260\",\"5\":\"1.326\",\"6\":\"3.4\",\"7\":\"3.4\",\"8\":\"7.0\",\"9\":\"1.326\"},{\"1\":\"virginica\",\"2\":\"6.588\",\"3\":\"2.974\",\"4\":\"5.552\",\"5\":\"2.026\",\"6\":\"3.8\",\"7\":\"3.8\",\"8\":\"7.9\",\"9\":\"2.026\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n.SD is amazing for selecting first and last row of certain group since we can imagine every group with selected table as a new separate data table. As well as other operation that can be done on *data.table*.\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](Day2_IRB25_part1_files/figure-html/unnamed-chunk-34-1.png){fig-align='center' width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\niris_dt[, .SD[c(1, .N)], by=Species]\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"Species\"],\"name\":[1],\"type\":[\"fct\"],\"align\":[\"left\"]},{\"label\":[\"Sepal.Length\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Sepal.Width\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Petal.Length\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Petal.Width\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"max_width1\"],\"name\":[6],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"max_width2\"],\"name\":[7],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"max_width3\"],\"name\":[8],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"meanPW\"],\"name\":[9],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"setosa\",\"2\":\"5.1\",\"3\":\"3.5\",\"4\":\"1.4\",\"5\":\"0.2\",\"6\":\"4.4\",\"7\":\"4.4\",\"8\":\"5.8\",\"9\":\"0.246\"},{\"1\":\"setosa\",\"2\":\"5.0\",\"3\":\"3.3\",\"4\":\"1.4\",\"5\":\"0.2\",\"6\":\"4.4\",\"7\":\"4.4\",\"8\":\"5.8\",\"9\":\"0.246\"},{\"1\":\"versicolor\",\"2\":\"7.0\",\"3\":\"3.2\",\"4\":\"4.7\",\"5\":\"1.4\",\"6\":\"3.4\",\"7\":\"3.4\",\"8\":\"7.0\",\"9\":\"1.326\"},{\"1\":\"versicolor\",\"2\":\"5.7\",\"3\":\"2.8\",\"4\":\"4.1\",\"5\":\"1.3\",\"6\":\"3.4\",\"7\":\"3.4\",\"8\":\"7.0\",\"9\":\"1.326\"},{\"1\":\"virginica\",\"2\":\"6.3\",\"3\":\"3.3\",\"4\":\"6.0\",\"5\":\"2.5\",\"6\":\"3.8\",\"7\":\"3.8\",\"8\":\"7.9\",\"9\":\"2.026\"},{\"1\":\"virginica\",\"2\":\"5.9\",\"3\":\"3.0\",\"4\":\"5.1\",\"5\":\"1.8\",\"6\":\"3.8\",\"7\":\"3.8\",\"8\":\"7.9\",\"9\":\"2.026\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n##### Task: .SD\n\nOrder the results by Petal.Width and select first three (smallest) observations by species. Calculate mean of first three columns for iris_dt for those observations. Do it in one command with chaining.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Write the solution here\n```\n:::\n\n\n------------------------------------------------------------------------\n\n## Combining tables\n\n### Binding tables\n\nHow to \"stitch\" two or more data objects into one?\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntb1 <- data.table(sampleID = c(6:1),\n                  cancer = c(\"Breast\",\"Breast\",\"Brain\",\"Liver\",\"Brain\",\"Pancreas\"))\ntb2 <- data.table(sampleID = c(7, 4, 6, 2, 8), \n                  gender = c(\"F\",\"F\",\"M\",\"F\",\"M\")) \nhead(tb1,3)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"sampleID\"],\"name\":[1],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"cancer\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"6\",\"2\":\"Breast\"},{\"1\":\"5\",\"2\":\"Breast\"},{\"1\":\"4\",\"2\":\"Brain\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n```{.r .cell-code}\nhead(tb2,3)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"sampleID\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"gender\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"7\",\"2\":\"F\"},{\"1\":\"4\",\"2\":\"F\"},{\"1\":\"6\",\"2\":\"M\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\nFunction **rbind()** binds the tables by rows. Try run the code below and see what happens. Why is that?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrbind(tb1, tb2)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in rbindlist(l, use.names, fill, idcol, ignore.attr): Column 2 ['gender'] of item 2 is missing in item 1. Use fill=TRUE to fill with NA (NULL for list columns), or use.names=FALSE to ignore column names.\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrbind(tb1, tb2, fill=TRUE)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"sampleID\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"cancer\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"gender\"],\"name\":[3],\"type\":[\"chr\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"6\",\"2\":\"Breast\",\"3\":\"NA\"},{\"1\":\"5\",\"2\":\"Breast\",\"3\":\"NA\"},{\"1\":\"4\",\"2\":\"Brain\",\"3\":\"NA\"},{\"1\":\"3\",\"2\":\"Liver\",\"3\":\"NA\"},{\"1\":\"2\",\"2\":\"Brain\",\"3\":\"NA\"},{\"1\":\"1\",\"2\":\"Pancreas\",\"3\":\"NA\"},{\"1\":\"7\",\"2\":\"NA\",\"3\":\"F\"},{\"1\":\"4\",\"2\":\"NA\",\"3\":\"F\"},{\"1\":\"6\",\"2\":\"NA\",\"3\":\"M\"},{\"1\":\"2\",\"2\":\"NA\",\"3\":\"F\"},{\"1\":\"8\",\"2\":\"NA\",\"3\":\"M\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\nFunction **cbind()** binds the tables. Do you notice anything strange when you run the code below?\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncbind(tb1, tb2)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"sampleID\"],\"name\":[1],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"cancer\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"sampleID\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"gender\"],\"name\":[4],\"type\":[\"chr\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"6\",\"2\":\"Breast\",\"3\":\"7\",\"4\":\"F\"},{\"1\":\"5\",\"2\":\"Breast\",\"3\":\"4\",\"4\":\"F\"},{\"1\":\"4\",\"2\":\"Brain\",\"3\":\"6\",\"4\":\"M\"},{\"1\":\"3\",\"2\":\"Liver\",\"3\":\"2\",\"4\":\"F\"},{\"1\":\"2\",\"2\":\"Brain\",\"3\":\"8\",\"4\":\"M\"},{\"1\":\"1\",\"2\":\"Pancreas\",\"3\":\"7\",\"4\":\"F\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n### `merge()`\n\n![](https://www.edureka.co/blog/content/ver.1554115042/uploads/2019/03/Joins-in-SQL-SQL-Joins-Edureka.png){fig-align=\"center\"}\n\nSpecify by which column you want to merge by and set the argument **all=** to TRUE to perform the full join\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmerge(tb1, tb2, by=\"sampleID\") #if setkey was used prior then merge(tb1,tb2) works the same\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"sampleID\"],\"name\":[1],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"cancer\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"gender\"],\"name\":[3],\"type\":[\"chr\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"2\",\"2\":\"Brain\",\"3\":\"F\"},{\"1\":\"4\",\"2\":\"Brain\",\"3\":\"F\"},{\"1\":\"6\",\"2\":\"Breast\",\"3\":\"M\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n```{.r .cell-code}\nmerge(tb1, tb2, by=\"sampleID\", all=TRUE)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"sampleID\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"cancer\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"gender\"],\"name\":[3],\"type\":[\"chr\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"1\",\"2\":\"Pancreas\",\"3\":\"NA\"},{\"1\":\"2\",\"2\":\"Brain\",\"3\":\"F\"},{\"1\":\"3\",\"2\":\"Liver\",\"3\":\"NA\"},{\"1\":\"4\",\"2\":\"Brain\",\"3\":\"F\"},{\"1\":\"5\",\"2\":\"Breast\",\"3\":\"NA\"},{\"1\":\"6\",\"2\":\"Breast\",\"3\":\"M\"},{\"1\":\"7\",\"2\":\"NA\",\"3\":\"F\"},{\"1\":\"8\",\"2\":\"NA\",\"3\":\"M\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\nRight and left join\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmerge(tb1, tb2, by=\"sampleID\", all.x = TRUE)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"sampleID\"],\"name\":[1],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"cancer\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"gender\"],\"name\":[3],\"type\":[\"chr\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"1\",\"2\":\"Pancreas\",\"3\":\"NA\"},{\"1\":\"2\",\"2\":\"Brain\",\"3\":\"F\"},{\"1\":\"3\",\"2\":\"Liver\",\"3\":\"NA\"},{\"1\":\"4\",\"2\":\"Brain\",\"3\":\"F\"},{\"1\":\"5\",\"2\":\"Breast\",\"3\":\"NA\"},{\"1\":\"6\",\"2\":\"Breast\",\"3\":\"M\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n```{.r .cell-code}\nmerge(tb1, tb2, by=\"sampleID\", all.y = TRUE)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"sampleID\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"cancer\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"gender\"],\"name\":[3],\"type\":[\"chr\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"2\",\"2\":\"Brain\",\"3\":\"F\"},{\"1\":\"4\",\"2\":\"Brain\",\"3\":\"F\"},{\"1\":\"6\",\"2\":\"Breast\",\"3\":\"M\"},{\"1\":\"7\",\"2\":\"NA\",\"3\":\"F\"},{\"1\":\"8\",\"2\":\"NA\",\"3\":\"M\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n## Tidying the table\n\nTidying a data table often includes renaming columns to make them more informative or consistent.\n\n::: callout-tip\nYou can rename columns using `names()` or `colnames()`.\n\n`names(dt_cancer) <- vec_names`\n:::\n\n\n::: {.cell exercise='true' exercise.setup='cancer'}\n\n```{.r .cell-code}\ndt_cancer <- merge(tb1, tb2, by=\"sampleID\", all=TRUE)\ndt_cancer\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"sampleID\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"cancer\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"gender\"],\"name\":[3],\"type\":[\"chr\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"1\",\"2\":\"Pancreas\",\"3\":\"NA\"},{\"1\":\"2\",\"2\":\"Brain\",\"3\":\"F\"},{\"1\":\"3\",\"2\":\"Liver\",\"3\":\"NA\"},{\"1\":\"4\",\"2\":\"Brain\",\"3\":\"F\"},{\"1\":\"5\",\"2\":\"Breast\",\"3\":\"NA\"},{\"1\":\"6\",\"2\":\"Breast\",\"3\":\"M\"},{\"1\":\"7\",\"2\":\"NA\",\"3\":\"F\"},{\"1\":\"8\",\"2\":\"NA\",\"3\":\"M\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n```{.r .cell-code}\nnames(dt_cancer)[1] <- \"id\"\ndt_cancer\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"id\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"cancer\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"gender\"],\"name\":[3],\"type\":[\"chr\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"1\",\"2\":\"Pancreas\",\"3\":\"NA\"},{\"1\":\"2\",\"2\":\"Brain\",\"3\":\"F\"},{\"1\":\"3\",\"2\":\"Liver\",\"3\":\"NA\"},{\"1\":\"4\",\"2\":\"Brain\",\"3\":\"F\"},{\"1\":\"5\",\"2\":\"Breast\",\"3\":\"NA\"},{\"1\":\"6\",\"2\":\"Breast\",\"3\":\"M\"},{\"1\":\"7\",\"2\":\"NA\",\"3\":\"F\"},{\"1\":\"8\",\"2\":\"NA\",\"3\":\"M\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n::: callout-tip\nYou can rename columns using data.table: `setnames`\n\n`setnames(dt_cancer, \"old_names\", \"new_names\")`\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnames(dt_cancer)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"id\"     \"cancer\" \"gender\"\n```\n:::\n\n```{.r .cell-code}\nsetnames(dt_cancer,  \"id\", \"sampleID\")\nnames(dt_cancer)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"sampleID\" \"cancer\"   \"gender\"  \n```\n:::\n:::\n\n\n### Ordering columns\n\nSubseting\n\n`dt[,.(col3, col10, col2)]`\n\n\n::: {.cell exercise='true' exercise.setup='cancer'}\n\n```{.r .cell-code}\ndt_cancer[,.(gender, sampleID)]\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"gender\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"sampleID\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"NA\",\"2\":\"1\"},{\"1\":\"F\",\"2\":\"2\"},{\"1\":\"NA\",\"2\":\"3\"},{\"1\":\"F\",\"2\":\"4\"},{\"1\":\"NA\",\"2\":\"5\"},{\"1\":\"M\",\"2\":\"6\"},{\"1\":\"F\",\"2\":\"7\"},{\"1\":\"M\",\"2\":\"8\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\ndata.table: setcolorder()\n\n`setcolorder(dt_cancer, neworder)`\n\n\n::: {.cell exercise='true' exercise.setup='cancer'}\n\n```{.r .cell-code}\ndt_cancer\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"sampleID\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"cancer\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"gender\"],\"name\":[3],\"type\":[\"chr\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"1\",\"2\":\"Pancreas\",\"3\":\"NA\"},{\"1\":\"2\",\"2\":\"Brain\",\"3\":\"F\"},{\"1\":\"3\",\"2\":\"Liver\",\"3\":\"NA\"},{\"1\":\"4\",\"2\":\"Brain\",\"3\":\"F\"},{\"1\":\"5\",\"2\":\"Breast\",\"3\":\"NA\"},{\"1\":\"6\",\"2\":\"Breast\",\"3\":\"M\"},{\"1\":\"7\",\"2\":\"NA\",\"3\":\"F\"},{\"1\":\"8\",\"2\":\"NA\",\"3\":\"M\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n```{.r .cell-code}\nsetcolorder(dt_cancer, c(\"gender\",\"sampleID\"))\ndt_cancer\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"gender\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"sampleID\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"cancer\"],\"name\":[3],\"type\":[\"chr\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"NA\",\"2\":\"1\",\"3\":\"Pancreas\"},{\"1\":\"F\",\"2\":\"2\",\"3\":\"Brain\"},{\"1\":\"NA\",\"2\":\"3\",\"3\":\"Liver\"},{\"1\":\"F\",\"2\":\"4\",\"3\":\"Brain\"},{\"1\":\"NA\",\"2\":\"5\",\"3\":\"Breast\"},{\"1\":\"M\",\"2\":\"6\",\"3\":\"Breast\"},{\"1\":\"F\",\"2\":\"7\",\"3\":\"NA\"},{\"1\":\"M\",\"2\":\"8\",\"3\":\"NA\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n## Reshaping the table\n\nYou can create a modified version of an existing `data.table` by using `copy()` to avoid changing the original data. Then, use `:=` to add or modify columns by reference.\n\nIn the example below, we create two new columns (`BRCA2` and `ATM`) filled with random values between 40 and 6000 for 6 rows:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntb.shape <- copy(tb1)\ntb.shape[, \":=\" (\n            BRCA2=sample(40:6000,6),\n            ATM=sample(40:6000,6)) ]\n\ntb.shape\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"sampleID\"],\"name\":[1],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"cancer\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"BRCA2\"],\"name\":[3],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"ATM\"],\"name\":[4],\"type\":[\"int\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"6\",\"2\":\"Breast\",\"3\":\"3490\",\"4\":\"2077\"},{\"1\":\"5\",\"2\":\"Breast\",\"3\":\"4427\",\"4\":\"2590\"},{\"1\":\"4\",\"2\":\"Brain\",\"3\":\"791\",\"4\":\"3964\"},{\"1\":\"3\",\"2\":\"Liver\",\"3\":\"3376\",\"4\":\"738\"},{\"1\":\"2\",\"2\":\"Brain\",\"3\":\"182\",\"4\":\"5824\"},{\"1\":\"1\",\"2\":\"Pancreas\",\"3\":\"5795\",\"4\":\"2879\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n**`melt (wide to long)`**\n\nConvert DT to long form where money is a separate observation. **measure.vars** specify the set of columns we would like to collapse (or combine) together.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmelt(tb.shape, id.vars = c(\"sampleID\", \"cancer\"),\n                measure.vars = c(\"BRCA2\", \"ATM\"))\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"sampleID\"],\"name\":[1],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"cancer\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"variable\"],\"name\":[3],\"type\":[\"fct\"],\"align\":[\"left\"]},{\"label\":[\"value\"],\"name\":[4],\"type\":[\"int\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"6\",\"2\":\"Breast\",\"3\":\"BRCA2\",\"4\":\"3490\"},{\"1\":\"5\",\"2\":\"Breast\",\"3\":\"BRCA2\",\"4\":\"4427\"},{\"1\":\"4\",\"2\":\"Brain\",\"3\":\"BRCA2\",\"4\":\"791\"},{\"1\":\"3\",\"2\":\"Liver\",\"3\":\"BRCA2\",\"4\":\"3376\"},{\"1\":\"2\",\"2\":\"Brain\",\"3\":\"BRCA2\",\"4\":\"182\"},{\"1\":\"1\",\"2\":\"Pancreas\",\"3\":\"BRCA2\",\"4\":\"5795\"},{\"1\":\"6\",\"2\":\"Breast\",\"3\":\"ATM\",\"4\":\"2077\"},{\"1\":\"5\",\"2\":\"Breast\",\"3\":\"ATM\",\"4\":\"2590\"},{\"1\":\"4\",\"2\":\"Brain\",\"3\":\"ATM\",\"4\":\"3964\"},{\"1\":\"3\",\"2\":\"Liver\",\"3\":\"ATM\",\"4\":\"738\"},{\"1\":\"2\",\"2\":\"Brain\",\"3\":\"ATM\",\"4\":\"5824\"},{\"1\":\"1\",\"2\":\"Pancreas\",\"3\":\"ATM\",\"4\":\"2879\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\nWe can also specify column indices instead of names.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n(tb1.m1  <- melt(tb.shape, \n                 measure.vars = c(\"BRCA2\", \"ATM\"),\n                 variable.name = \"genes\",\n                 value.name = \"n_mutations\")  \n )\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"sampleID\"],\"name\":[1],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"cancer\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"genes\"],\"name\":[3],\"type\":[\"fct\"],\"align\":[\"left\"]},{\"label\":[\"n_mutations\"],\"name\":[4],\"type\":[\"int\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"6\",\"2\":\"Breast\",\"3\":\"BRCA2\",\"4\":\"3490\"},{\"1\":\"5\",\"2\":\"Breast\",\"3\":\"BRCA2\",\"4\":\"4427\"},{\"1\":\"4\",\"2\":\"Brain\",\"3\":\"BRCA2\",\"4\":\"791\"},{\"1\":\"3\",\"2\":\"Liver\",\"3\":\"BRCA2\",\"4\":\"3376\"},{\"1\":\"2\",\"2\":\"Brain\",\"3\":\"BRCA2\",\"4\":\"182\"},{\"1\":\"1\",\"2\":\"Pancreas\",\"3\":\"BRCA2\",\"4\":\"5795\"},{\"1\":\"6\",\"2\":\"Breast\",\"3\":\"ATM\",\"4\":\"2077\"},{\"1\":\"5\",\"2\":\"Breast\",\"3\":\"ATM\",\"4\":\"2590\"},{\"1\":\"4\",\"2\":\"Brain\",\"3\":\"ATM\",\"4\":\"3964\"},{\"1\":\"3\",\"2\":\"Liver\",\"3\":\"ATM\",\"4\":\"738\"},{\"1\":\"2\",\"2\":\"Brain\",\"3\":\"ATM\",\"4\":\"5824\"},{\"1\":\"1\",\"2\":\"Pancreas\",\"3\":\"ATM\",\"4\":\"2879\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n**`dcast (long to wide)`**\n\nWe want to get the original table from the previous reshaped one using **dcast()**\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndcast(tb1.m1, sampleID + cancer ~ genes, value.var = \"n_mutations\")\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"sampleID\"],\"name\":[1],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"cancer\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"BRCA2\"],\"name\":[3],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"ATM\"],\"name\":[4],\"type\":[\"int\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"1\",\"2\":\"Pancreas\",\"3\":\"5795\",\"4\":\"2879\"},{\"1\":\"2\",\"2\":\"Brain\",\"3\":\"182\",\"4\":\"5824\"},{\"1\":\"3\",\"2\":\"Liver\",\"3\":\"3376\",\"4\":\"738\"},{\"1\":\"4\",\"2\":\"Brain\",\"3\":\"791\",\"4\":\"3964\"},{\"1\":\"5\",\"2\":\"Breast\",\"3\":\"4427\",\"4\":\"2590\"},{\"1\":\"6\",\"2\":\"Breast\",\"3\":\"3490\",\"4\":\"2077\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n## Saving a table with `fwrite()`\n\nThe `fwrite()` function from the `data.table` package is a fast and efficient way to write data tables to disk.\n\n::: callout-tip\nfwrite(dt, file = \"results/iris_summary.csv\")\n:::\n",
    "supporting": [
      "Day2_IRB25_part1_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\r\n<script src=\"site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}