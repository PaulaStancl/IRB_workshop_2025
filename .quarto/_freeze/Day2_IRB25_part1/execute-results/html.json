{
  "hash": "3e3d22d548f12b832e9fe885e432231a",
  "result": {
    "markdown": "---\ntitle: \"R packages and advance table manipulation\"\nauthor: \n  - name: \"dr.sc. Paula Štancl\"\n    affiliation: \"Kuzman Consulting d.o.o\"\n  - name: \"dr.sc. Andrea Gelemanović\"\n    affiliation: \"MedILS, UNIST\"\nformat:\n  html:\n    self-contained: true\n    toc: true\n    toc-depth: 4\n    code-fold: false\n    fig-align: center\n    df-print: paged\nexecute:\n  echo: true\n  warning: false\n  message: false\n---\n\n\n## Install a package\n\n### CRAN\n\nCRAN is the **official repository** for R packages. It hosts thousands of stable, peer-reviewed R packages that have passed strict checks for quality and compatibility.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Install from CRAN as follow:\ninstall.packages(\"magrittr\")\ninstall.packages(\"dplyr\")\ninstall.packages(\"ggplot2\") \n```\n:::\n\n\n### Github\n\nGitHub is a **platform for code sharing and collaboration**, widely used by developers. Many R package authors share their **development versions** on GitHub---these might include the newest features or bug fixes that haven't yet been submitted to CRAN.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Or, install the latest version from GitHub as follow:\n# Install\nif(!require(devtools)) install.packages(\"devtools\")\ndevtools::install_github(\"kassambara/ggpubr\")\n```\n:::\n\n\n### Bioconductor\n\nBioconductor is a **specialized repository** for packages focused on **bioinformatics, genomics, and computational biology**. It includes tools for analyzing DNA/RNA sequencing, gene expression, and other biological data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## Bioconductor\nif (!require(\"BiocManager\", quietly = TRUE))\n    install.packages(\"BiocManager\")\n\nBiocManager::install(\"airway\")\n```\n:::\n\n\n## Load the packages\n\nWhen you **install a package** in R (using `install.packages()` or similar), you're downloading it and saving it to your computer. This only needs to be done **once** (per R environment).\n\nHowever, to **use** the functions or data from a package in your current R session, you must **load** the package with `library()` or `require()`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(\"magrittr\")\nlibrary(\"data.table\")\nlibrary(\"ggpubr\")\nlibrary(\"airway\")\n```\n:::\n\n\n## Pipes ( **%\\>%** )\n\nPackage magrittr provides a new \"pipe\"-like operator, **`%>%`**. The pipe operator allows you to pipe a value forward into a function. For example you can write **`vec %>% sum`** instead of **`sum(vec)`** . It makes your code more intuitive to read and write especially when \"pipping/chaining\" multiple arguments. Fill in the example below:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsample(x = 1:1000, size = 40) %>% \n   # Call function sum on the whole vector\n\n   # Select only minimal and maximum  value\n```\n:::\n\n\n# Tables (`data.frame` vs `data.table`)\n\nA **`data.frame`** is a 2D table-like structure where columns can hold different data types. **`data.table`** is an enhanced version of **`data.frame`** that provides faster and more memory-efficient operations.\n\n::: callout-important\n## Built-in datasets\n\n-   R comes with several **built-in datasets** that are useful for learning, testing, and demonstrating functions without needing to load external data.\n\n-   These datasets are included in base R and standard packages like `datasets`, and can be accessed directly by name (e.g., **`CO2`**, **`iris`**, **`mtcars`**, etc.).\n\n-   One such dataset is `CO2`, which contains measurements of the **cold- and warm-treatment effects on carbon dioxide uptake** in grass plants. You can view available datasets with **`data()`** and get help on a specific one using **`?CO2`**.\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Call the table\nhead(CO2)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"\"],\"name\":[\"_rn_\"],\"type\":[\"\"],\"align\":[\"left\"]},{\"label\":[\"Plant\"],\"name\":[1],\"type\":[\"ord\"],\"align\":[\"right\"]},{\"label\":[\"Type\"],\"name\":[2],\"type\":[\"fct\"],\"align\":[\"left\"]},{\"label\":[\"Treatment\"],\"name\":[3],\"type\":[\"fct\"],\"align\":[\"left\"]},{\"label\":[\"conc\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"uptake\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"Qn1\",\"2\":\"Quebec\",\"3\":\"nonchilled\",\"4\":\"95\",\"5\":\"16.0\",\"_rn_\":\"1\"},{\"1\":\"Qn1\",\"2\":\"Quebec\",\"3\":\"nonchilled\",\"4\":\"175\",\"5\":\"30.4\",\"_rn_\":\"2\"},{\"1\":\"Qn1\",\"2\":\"Quebec\",\"3\":\"nonchilled\",\"4\":\"250\",\"5\":\"34.8\",\"_rn_\":\"3\"},{\"1\":\"Qn1\",\"2\":\"Quebec\",\"3\":\"nonchilled\",\"4\":\"350\",\"5\":\"37.2\",\"_rn_\":\"4\"},{\"1\":\"Qn1\",\"2\":\"Quebec\",\"3\":\"nonchilled\",\"4\":\"500\",\"5\":\"35.3\",\"_rn_\":\"5\"},{\"1\":\"Qn1\",\"2\":\"Quebec\",\"3\":\"nonchilled\",\"4\":\"675\",\"5\":\"39.2\",\"_rn_\":\"6\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n### Import different type of data\n\n::: callout-important\n## Functions to import the data\n\n-   basic R import function:\n\n    `df <- read.csv()`\n\n    `df <- read.tsv()`\n\n    `df <- read.table()`\n\n-   data.table import function:\n\n    `dt <- fread()`\n\n-   using specialized funcions from R packages to import files such as Excel, SPSS\n\n    `df <- read_excel()`\n\n    `df <- read.spss()`\n\n    `...`\n:::\n\nImport a file\n\nImport a file from this link: <https://raw.githubusercontent.com/owid/covid-19-data/master/public/data/hospitalizations/covid-hospitalizations.csv>\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\r\n<script src=\"site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}